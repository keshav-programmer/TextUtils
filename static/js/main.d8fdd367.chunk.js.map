{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","title","type","id","onClick","toggleMode","htmlFor","prototype","PropTypes","string","isRequired","aboutText","defaultProps","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8fdd367.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <h3 className=\"navbar-brand\">\r\n            {props.title}\r\n          </h3>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             \r\n              \r\n            </ul>\r\n\r\n\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n\r\n{/* \r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TextForm = (props) => {\r\n  const handelUpClick = () => {\r\n    // console.log(\"handle was click\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Uppercase as been completed','success');\r\n  };\r\n  const handelLoClick = () => {\r\n    // console.log(\"handle was click\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Lowercase as been completed','success');\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handleonchange was click\");\r\n    setText(event.target.value);\r\n  };\r\n  const clear = (event) => {\r\n    // console.log(\"handleonchange was click\");\r\n    setText(\"\");\r\n    props.showAlert('TextArea is clear','success');\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    // var text = document.getElementById('myBox');\r\n    // text.select();\r\n    navigator.clipboard.writeText(text);\r\n    // document.getSelection().removeAllRanges();\r\n    props.showAlert('Text Copied Successful','success');\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(' '))\r\n      props.showAlert('Extra spaces has been removed','success');\r\n      }\r\n    \r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            style={{backgroundColor: props.mode === 'dark'?'#222':'white',color: props.mode ==='dark'?'white':'black'}}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-4\" onClick={handelUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-4\" onClick={handelLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-4\" onClick={clear}>\r\n          Clear Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-4\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-4\" onClick={handleExtraSpaces}>\r\n         Remove Extra spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(/\\s/).filter((element)=>{return element.length !== 0}).length} words and {text.split(/\\s/).join(\"\").length}{\" \"}\r\n          characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes to read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0 ? text : \"Nothing to Preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <div style={{height: '60px'}}>\r\n       {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>Success</strong> : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'dark'){\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }else{\n      setMode('dark');\n      document.body.style.backgroundColor = '#111';\n      showAlert('Dark mode has been enabled', 'success');\n    }\n  }\n\n  return (\n    <>\n  \n      <Navbar title=\"TextUtils\" mode={mode}  toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n     \n          <TextForm heading=\"Enter your text\" mode={mode} showAlert={showAlert}/>\n        \n        \n      </div>\n        \n     \n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}